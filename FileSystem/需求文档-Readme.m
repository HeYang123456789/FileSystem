/*
    组合模式的基本思想要点：
        要想拿到子节点，就需要拿到该子节点的父节点
 */


#pragma mark - 技术学习要求
/*
 需要彻底搞明白UITableView的相关细节：循环引用（需要综合学习很多关于UITableView的实例源码，综合总结一下）
 需要学习YouXianMing的天气预报的示例，知道所有的细节，并学以致用，最后用到我这个文件夹管理系统中
 需要学习完所有YouXianMing传授的设计模式，对整个文件夹管理系统进行重构
 */

#pragma mark 第一个需求
/*
 *  如果是多种文件，点击按钮触发按钮事件，就需要调用系统软件来打开文件进行查看。
 *  那么这个点击触发事件就需要添加很多种判断语句了，根据什么类型来进行操作
 *  判断语句太多了就不太好，所以这里就需要更改设计模式了，那么该使用什么设计模式呢？
 */
#pragma mark 第二个需求：
/*
 *  需要分别设计成两种Cell：FileCell和FolderCell，因为FolderCell需要显示子文件和子文件夹数量(可能需要用到多态继承抽象的Cell)
 *  Folder的Cell上面需要再加两个Label显示一下内部的"文件数量"和"文件夹数量"
 */
#pragma mark  第三个需求：
/*  整个文件夹管理系统或者这个文件夹管理app
 *  首次启动，开启线程需要扫描当前目录下的所有文件和文件夹，注意仅仅是当前目录下的子文件夹和子文件，并实时更新UI动画动态变化显示数量数据
 *      这个子线程可以使用全局并发队列创建的线程
 *  点击一个Cell(文件夹folder的cell)，打开一个新的UITableView然后显示所有的文件夹和文件，同时动画更新UI数据(比如文件数量)
 *      这个需要学习YouXianMing的天气预报项目的设计了 --> 下拉刷新的时候重新更新了UI。
 *  
 *  这里可能会存在的问题：UITableViewCell是循环利用的，不可能更新全部Cell，所以需要更新当前显示的Cell
 *
 *  如果会使用Runloop，可以利用Runloop监听手机存储空间的大小变化，一变化就开启线程更新
 */
#pragma mark  第四个需求
/*
    保留使用导航控制器
        通过导航控制器返回操作，挺不错的。
 */
#pragma mark  第五个需求
/*
    UI数据的抽取，统一管理，新建一个公共.h文件，里面宏定义相关的尺寸
 */
#pragma mark 第六个需求
/*
    需要 回忆之前MJ的关于文件的递归算法
 */
#pragma mark 第七个需求
/*
    
 */


